<?php

namespace app\index\controller;

use think\Controller;
use think\Db;
use think\Request;

class Shopcart extends Controller
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        checkJWT();
    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        //
        $uid = $this->request->id;

        $cart = Db::table('cart')->where('uid',$uid)->find();
        if($cart){
            $goods = Db::table('cart_extra')->alias('c')
                 ->field('c.num,c.gid,c.state,goods.gname,goods.gename,goods.gthumb,goods.gtype,goods.cid,goods.price')
                 ->join('goods','c.gid=goods.gid')
                ->where('uid',$uid)->select();

            $cart['goods'] = $goods;

            return  json([
                'code'=>config('code.success'),
                'msg'=>'购物获取成功',
                'data'=>$cart
            ]);
        }else{
            return  json([
                'code'=>config('code.success'),
                'msg'=>'购物为空'
            ]);
        }

    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
    }

    /**
     * 保存新建的资源
     *
     * @param \think\Request $request
     * @return \think\Response
     */
    public function save(Request $request)
    {
        $data = $this->request->post();
        $uid = $this->request->id;

        $cart = Db::table('cart')->where('uid', $uid)->find();
        // 存在购物车  uid->cart表

        if ($cart) {
            // 存在
            // 当前商品添加购物车
            // 存在
            $goodsArr = ['gid' => $data['gid'], 'uid' => $uid];
            $goods = Db::table('cart_extra')->where($goodsArr)->find();
            Db::startTrans();
            if ($goods) {
                // 购物车信息 商品数量+1
                $result = Db::table('cart_extra')->where(['uid' => $uid, 'gid' => $data['gid']])->setInc('num');
            } else {
                // 购物车信息 不存在 ：  追加 (cart_extra): gid,num,state,sid,uid --> 更新购物车(商品数量，总价)
                $insertArr = ['gid' => $data['gid'], 'num' => 1, 'state' => 1, 'sid' => $cart['sid'], 'uid' => $uid];
                $result = Db::table('cart_extra')->insert($insertArr);
            }
            // 购物车 数量+1  价格+
            $totalResult = Db::table('cart')->where(['uid' => $uid])->setInc('total');
            $priceResult = Db::table('cart')->where(['uid' => $uid])->setInc('price', $data['price']);
            if ($result && $totalResult && $priceResult) {
                Db::commit();
                return json([
                    'code' => config('code.success'),
                    'msg' => '商品添加成功'
                ]);
            } else {
                Db::rollback();
                return json([
                    'code' => config('code.fail'),
                    'msg' => '商品添加失败'
                ]);
            }
        } else {
            // 不存在 -> 初始化 cart (uid,total:1,price:) -> 添加商品 cart_extra(gid,num:1,state:1,sid:,uid)
            Db::startTrans();
            $cartInfo = ['uid' => $uid, 'total' => 1, 'price' => $data['price']];
            $sid = Db::table('cart')->insertGetId($cartInfo);
            $cartExtra = ['gid' => $data['gid'], 'num' => 1, 'state' => 1, 'uid' => $uid, 'sid' => $sid];
            $result = Db::table('cart_extra')->insert($cartExtra);

            if ($sid && $result) {
                Db::commit();
                return json([
                    'code' => config('code.success'),
                    'msg' => '商品添加成功'
                ]);
            } else {
                Db::rollback();
                return json([
                    'code' => config('code.fail'),
                    'msg' => '商品添加失败'
                ]);
            }
        }


    }

    /**
     * 显示指定的资源
     *
     * @param int $id
     * @return \think\Response
     */
    public function read($id)
    {

        $uid = $this->request->id;
        $result = Db::table('cart')->field('total')->where(['uid'=>$uid])->find();
        if($result){
            return  json([
                'code'=>config('code.success'),
                'msg'=>'数据获取成功',
                'data'=>$result['total']
            ]);
        }else{
            return  json([
                'code'=>config('code.fail'),
                'msg'=>'暂无购物车'
            ]);
        }
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param int $id
     * @return \think\Response
     */
    public function edit($id)
    {

    }

    /**
     * 保存更新的资源
     *
     * @param \think\Request $request
     * @param int $id
     * @return \think\Response
     */
    public function update(Request $request, $id)
    {
        // 更新商品信息  ---> 购物车信息

        $uid = $this->request->id;
        $data = $this->request->put();

        Db::startTrans();
        $goodsResult = Db::table('cart_extra')->where(['uid'=>$uid,'gid'=>$data['gid']])->setInc('num');

        $cartTotalResult = Db::table('cart')->where(['uid'=>$uid])->setInc('total');
        $cartPriceResult = Db::table('cart')->where(['uid'=>$uid])->setInc('price',$data['price']);

        if($goodsResult && $cartTotalResult && $cartPriceResult){
            Db::commit();
            return  json([
               'code'=>config('code.success'),
               'msg'=>'购物车更新成功'
            ]);
        }else{
            Db::rollback();
            return  json([
                'code'=>config('code.fail'),
                'msg'=>'购物车更新失败'
            ]);
        }
    }

    /**
     * 删除指定资源
     *
     * @param int $id
     * @return \think\Response
     */
    public function delete($id)
    {
        //
    }
}
